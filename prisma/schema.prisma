// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  role          Role      @default(PATIENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  doctor        Doctor?
  patient       Patient?
}

model Doctor {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  name          String
  specialty     String
  experience    Int
  rating        Float     @default(0)
  departmentId  String
  department    Department @relation(fields: [departmentId], references: [id])
  appointments  Appointment[]
  schedules     Schedule[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Patient {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  name          String
  phone         String?
  appointments  Appointment[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Appointment {
  id            String    @id @default(cuid())
  doctorId      String
  doctor        Doctor    @relation(fields: [doctorId], references: [id])
  patientId     String
  patient       Patient   @relation(fields: [patientId], references: [id])
  date          DateTime
  status        AppointmentStatus @default(PENDING)
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Department {
  id            String    @id @default(cuid())
  name          String    @unique
  description   String?
  doctors       Doctor[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Schedule {
  id            String    @id @default(cuid())
  doctorId      String
  doctor        Doctor    @relation(fields: [doctorId], references: [id])
  dayOfWeek     Int       // 0-6 (Sunday-Saturday)
  startTime     DateTime
  endTime       DateTime
  isAvailable   Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
} 