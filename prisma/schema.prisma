// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(PATIENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  appointments  Appointment[]
  medicalHistory MedicalHistory[]
  notifications Notification[]
  medicalReports MedicalReport[]
}

model Department {
  id        String   @id @default(cuid())
  name      String
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  doctors   Doctor[]
}

model Doctor {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  specialty     String
  experience    Int
  rating        Float     @default(0)
  departmentId  String
  department    Department @relation(fields: [departmentId], references: [id])
  appointments  Appointment[]
  schedules     Schedule[]
  reviews       Review[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Appointment {
  id          String    @id @default(cuid())
  userId      String
  doctorId    String
  date        DateTime
  time        String
  status      Status    @default(UPCOMING)
  notes       String?
  user        User      @relation(fields: [userId], references: [id])
  doctor      Doctor    @relation(fields: [doctorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Schedule {
  id        String   @id @default(cuid())
  doctorId  String
  day       String
  startTime String
  endTime   String
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(cuid())
  doctorId  String
  userId    String
  rating    Int
  comment   String?
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MedicalHistory {
  id        String   @id @default(cuid())
  userId    String
  condition String
  diagnosis String
  treatment String
  date      DateTime
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  title     String
  message   String
  read      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MedicalReport {
  id          String    @id @default(cuid())
  userId      String
  title       String
  content     String
  date        DateTime
  doctorId    String
  user        User      @relation(fields: [userId], references: [id])
  doctor      Doctor    @relation(fields: [doctorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

enum Status {
  UPCOMING
  COMPLETED
  CANCELLED
} 